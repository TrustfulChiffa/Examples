// //СТИХИЙНЫЙ МЕТОД:

// // Вводим 9 переменных
// int a1 = 15;
// int b1 = 21;
// int c1 = 39;
// int a2 = 12;
// int b2 = 23;
// int c2 = 33;
// int a3 = 13;
// int b3 = 23;
// int c3 = 33;

// // Определяем переменную максимум, в которую кладем значение первого элемента
// int max = a1;
// // Проверяем больше ли следующее значение максимального, и если да приравниваем max к нему
// if(b1 > max) max = b1;
// if(c1 > max) max = c1;

// if(a2 > max) max = a2;
// if(b2 > max) max = b2;
// if(c2 > max) max = c2;

// if(a3 > max) max = a3;
// if(b3 > max) max = b3;
// if(c3 > max) max = c3;

// Console.WriteLine(max);

///////////////////////////////////////////////////////////////////////////////////////////////////////

// ПРОЦЕДУРНЫЙ МЕТОД

// Название функции - Max
// Возвращаемый тип и тип кторый ф-я будет возвращать - int
// Аргумент - arg
int Max(int arg1, int arg2, int arg3)
//Тело аргумента:
{
    //Определяем внутренний result, где будет храниться значение
    int result = arg1;
    // Проверяем больше ли следующее значение максимального, и если да приравниваем результат к нему к нему. В рамках тройки игроков
    if (arg2 > result) result = arg2;
    if (arg3 > result) result = arg3;
    // Наш метод возвращает result
    return result;
}

// Вводим 9 переменных
int a1 = 112125;
int b1 = 21;
int c1 = 39;
int a2 = 12;
int b2 = 2311;
int c2 = 33;
int a3 = 13;
int b3 = 23111;
int c3 = 313;

// //Находим максимальное из первых трёх чисел. Аналогично для второй и третьей тройки чисел
// int max1 = Max(a1, b1, c1);
// int max2 = Max(a2, b2, c2);
// int max3 = Max(a3, b3, c3);

// //Устраиваем финал. Сравниваем полуфиналистов
// int max = Max(max1, max2, max3);

//Альтернативный способ. Можно и в одну строку записать его. Делаем финал сразу внося в него полуфиналы:
int max = Max(
Max(a1, b1, c1),
Max(a2, b2, c2),
Max(a3, b3, c3));

Console.WriteLine(max);